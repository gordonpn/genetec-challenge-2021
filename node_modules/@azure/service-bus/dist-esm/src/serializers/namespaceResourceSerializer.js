// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { __awaiter } from "tslib";
import { deserializeAtomXmlResponse, serializeToAtomXmlRequest } from "../util/atomXmlHelper";
import { getInteger, getString, getDate } from "../util/utils";
/**
 * @internal
 * @hidden
 * Builds the namespace object from the raw json object gotten after deserializing the
 * response from the service
 * @param rawNamespace
 */
export function buildNamespace(rawNamespace) {
    const messagingSku = (getString(rawNamespace["MessagingSKU"], "messagingSku"));
    return {
        createdAt: getDate(rawNamespace["CreatedTime"], "createdAt"),
        messagingSku: messagingSku,
        modifiedAt: getDate(rawNamespace["ModifiedTime"], "modifiedAt"),
        name: getString(rawNamespace["Name"], "name"),
        messagingUnits: messagingSku === "Premium"
            ? getInteger(rawNamespace["MessagingUnits"], "messagingUnits")
            : undefined
    };
}
/**
 * @internal
 * @hidden
 * Atom XML Serializer for Namespaces.
 */
export class NamespaceResourceSerializer {
    serialize() {
        return serializeToAtomXmlRequest("NamespaceProperties", {});
    }
    deserialize(response) {
        return __awaiter(this, void 0, void 0, function* () {
            return deserializeAtomXmlResponse(["name"], response);
        });
    }
}
//# sourceMappingURL=namespaceResourceSerializer.js.map