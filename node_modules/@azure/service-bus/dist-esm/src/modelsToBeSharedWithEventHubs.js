// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { __awaiter } from "tslib";
// TODO: this code is a straight-copy from EventHubs. Need to merge.
import { CanonicalCode, SpanKind } from "@opentelemetry/api";
import { getTracer } from "@azure/core-tracing";
/**
 * @internal
 * @hidden
 */
export function getParentSpan(options) {
    var _a;
    return (_a = options === null || options === void 0 ? void 0 : options.spanOptions) === null || _a === void 0 ? void 0 : _a.parent;
}
/**
 * @internal
 * @hidden
 *
 * @param {(Span | SpanContext | null)} [parentSpan]
 * @param {SpanContext[]} [spanContextsToLink=[]]
 * @param {string} [entityPath]
 * @param {string} [host]
 */
export function createSendSpan(parentSpan, spanContextsToLink = [], entityPath, host) {
    const links = spanContextsToLink.map((context) => {
        return {
            context
        };
    });
    const tracer = getTracer();
    const span = tracer.startSpan("Azure.ServiceBus.send", {
        kind: SpanKind.CLIENT,
        parent: parentSpan,
        links
    });
    span.setAttribute("az.namespace", "Microsoft.ServiceBus");
    span.setAttribute("message_bus.destination", entityPath);
    span.setAttribute("peer.address", host);
    return span;
}
/**
 * Runs the `fn` passed in and marks the span as completed with an error (and the
 * corresponding message) or as OK.
 *
 * @hidden
 * @internal
 */
export function trace(fn, span) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const ret = yield fn();
            span.setStatus({ code: CanonicalCode.OK });
            return ret;
        }
        catch (err) {
            span.setStatus({
                code: CanonicalCode.UNKNOWN,
                message: err.message
            });
            throw err;
        }
        finally {
            span.end();
        }
    });
}
//# sourceMappingURL=modelsToBeSharedWithEventHubs.js.map